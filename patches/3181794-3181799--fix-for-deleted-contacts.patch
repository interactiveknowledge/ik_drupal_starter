From 9fabf4b98d3a2bdc6d9308e50d0f0d4ab81131de Mon Sep 17 00:00:00 2001
From: Rosemary Stanley <rosemary@interactiveknowledge.com>
Date: Wed, 11 Nov 2020 08:34:15 -0500
Subject: [PATCH] Issue #3181794 and #3181799

* Optimize the getDeleted instead and just get status of all (see https://community.constantcontact.com/t5/Developer-Support-ask-questions/API-v-3-409-conflict-on-POST-create-a-Contact-User-doesn-t/m-p/336691/highlight/true#M11766)
* Check that first and last name exist before adding them to body for updateContact
---
 src/Service/ConstantContact.php | 112 +++-----------------------------
 1 file changed, 10 insertions(+), 102 deletions(-)

diff --git src/Service/ConstantContact.php src/Service/ConstantContact.php
index b255c01..ec5d3c6 100644
--- src/Service/ConstantContact.php
+++ src/Service/ConstantContact.php
@@ -200,7 +200,7 @@ class ConstantContact {
     $config = $this->getConfig();
 
     try {
-      $response = $this->httpClient->request('GET', $config['contact_url'] . '?email=' . $data['email_address'], [
+      $response = $this->httpClient->request('GET', $config['contact_url'] . '?email=' . $data['email_address'] . '&status=all', [
         'headers' => [
           'Authorization' => 'Bearer ' . $config['access_token'],
           'cache-control' => 'no-cache',
@@ -214,9 +214,6 @@ class ConstantContact {
       if ($json->contacts) {
         return $json;
       }
-      else {
-        return $this->getDeleted($this->apiUrl . '/contacts?status=deleted&include_count=TRUE', $data['email_address']);
-      }
     }
     catch (\Exception $e) {
       $this->loggerFactory->get('ik_constant_contact')->error($e);
@@ -277,52 +274,6 @@ class ConstantContact {
     }
   }
 
-  /**
-   * Checks if a contact is deleted from a list.
-   *
-   * This loops through all the deleted contacts of a
-   * list and returns if there is a match to the email address.
-   *
-   * @param string $endpoint
-   *   The endpoint to check. @see $this->getContact()
-   * @param string $email
-   *   The email address we're looking for.
-   *
-   * @return array
-   *   Returns an array of a matched deleted contact.
-   *
-   * @see https://community.constantcontact.com/t5/Developer-Support-ask-questions/API-v-3-409-conflict-on-POST-create-a-Contact-User-doesn-t/td-p/327518
-   */
-  private function getDeleted($endpoint, $email) {
-    $config = $this->getConfig();
-
-    $deleted = $this->httpClient->request('GET', $endpoint, [
-      'headers' => [
-        'Authorization' => 'Bearer ' . $config['access_token'],
-        'cache-control' => 'no-cache',
-        'content-type' => 'application/json',
-        'accept' => 'application/json',
-      ],
-    ]);
-
-    $deleted = json_decode($deleted->getBody()->getContents());
-    $match = NULL;
-
-    if (count($deleted->contacts)) {
-      foreach ($deleted->contacts as $value) {
-        if ($value->email_address->address === $email) {
-          $match = $value;
-        }
-      }
-    }
-
-    if (!$match &&  property_exists($deleted, '_links') && property_exists($deleted->_links, 'next') && property_exists($deleted->_links->next, 'href')) {
-      $match = $this->getDeleted('https://api.cc.email' . $deleted->_links->next->href, $email);
-    }
-
-    return $match;
-  }
-
   /**
    * Handles API response for adding a contact.
    *
@@ -383,7 +334,6 @@ class ConstantContact {
    *   Otherwise it sends the info to other methods.
    *
    * @see $this->updateContact
-   * @see $this->putContact
    * @see $this->createContact
    */
   public function postContact(array $data = [], $listID = NULL) {
@@ -438,63 +388,14 @@ class ConstantContact {
 
     // If yes, updateContact.
     // If no, createContact.
-    // If previous deleted, putContact.
     if (isset($exists['contacts']) && count($exists['contacts']) > 0) {
       $this->updateContact($data, $exists['contacts'][0], $listID);
     }
-    elseif ($exists && isset($exists['deleted_at'])) {
-      $this->putContact($exists, $data, $listID);
-    }
     else {
       $this->createContact($data, $listID);
     }
   }
 
-  /**
-   * Updates a contact if it already exists and has been deleted.
-   *
-   * @param array $contact
-   *   The response from $this->getDeleted.
-   * @param array $data
-   *   The $data provided originally. @see $this->postContact.
-   * @param string $listID
-   *   The list ID we want to post to.
-   *
-   * @see https://v3.developer.constantcontact.com/api_reference/index.html#!/Contacts/putContact
-   * @see $this->getDeleted
-   *
-   * @TODO perhaps combine this with updateContact. The difference is that $contact is
-   * an array here and an object in updateContact.
-   */
-  private function putContact(array $contact, array $data, $listID) {
-    $config = $this->getConfig();
-
-    $body = (object) $contact;
-    $body->email_address->permission_to_send = 'implicit';
-    $body->update_source = 'Contact';
-    $body->list_memberships = [$listID];
-    $body->first_name = $contact['first_name'];
-    $body->last_name = $data['last_name'];
-
-    try {
-      $response = $this->httpClient->request('PUT', $config['contact_url'] . '/' . $contact['contact_id'], [
-        'headers' => [
-          'Authorization' => 'Bearer ' . $config['access_token'],
-          'cache-control' => 'no-cache',
-          'content-type' => 'application/json',
-          'accept' => 'application/json',
-        ],
-        'body' => json_encode($body),
-      ]);
-
-      $this->handleResponse($response, 'putContact');
-
-    }
-    catch (\Exception $e) {
-      $this->loggerFactory->get('ik_constant_contact')->error($e);
-    }
-  }
-
   /**
    * Makes authenticated request to Constant Contact to refresh tokens.
    *
@@ -589,8 +490,15 @@ class ConstantContact {
       ];
       $body->email_address->address = $data['email_address'];
       $body->email_address->permission_to_send = 'implicit';
-      $body->first_name = $data['first_name'];
-      $body->last_name = $data['last_name'];
+
+      if (isset($data['first_name'])) {
+        $body->first_name = $data['first_name'];
+      }
+      
+      if (isset($data['last_name'])) {
+        $body->first_name = $data['last_name'];
+      }
+
       $body->update_source = 'Contact';
       $body->list_memberships = [$listID];
 
-- 
2.24.3 (Apple Git-128)

